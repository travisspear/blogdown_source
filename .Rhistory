View(Low)
Low <- OMFrequency %>%
filter(Frequency == 2) %>%
sample_n(5)
View(Low)
OMFrequency <- dbGetQuery(con_central,
"
WITH eff AS ( -- Create a temporary table to pull the required data
SELECT DISTINCT
st.SourceId,
mesname.Name AS EfficacyName,
mescat.Name AS CatName
FROM Literature.Study st  -- Publication Data table
LEFT JOIN Literature.ArmGroup arm ON arm.StudyId = st.Id -- ArmGroup information table
LEFT JOIN Literature.ArmGroupMeasurement mes ON mes.ArmGroupId = arm.Id -- OM/Bio/Other Table
LEFT JOIN Ontology.Measurement mesname ON mesname.UID = mes.MeasurementUID -- Efficacy Names
LEFT JOIN Ontology.Measurement_MeasurementCategory mescatlink ON mescatlink.MeasurementId = mesname.Id
LEFT JOIN Ontology.MeasurementCategory mescat ON mescat.Id = mescatlink.MeasurementCategoryId
LEFT JOIN Project.DatasetStudy dst ON dst.StudySourceId = st.SourceId
LEFT JOIN Project.ProjectDataset pdst ON pdst.Id = dst.ProjectDatasetId
LEFT JOIN Project.Project pro ON pro.Id = pdst.ProjectId
where (mescat.Name = 'Cognitive' AND pro.Name like 'Alzheimer%')
)
SELECT EfficacyName, count(EfficacyName) 'Frequency'
FROM eff
GROUP BY EfficacyName
ORDER BY Frequency DESC"
)
head(OMFrequency)
set.seed(1)
High <- OMFrequency %>%
slice(1:5)
Mid_byMean <- OMFrequency %>%
filter(Frequency %in% c(6,7)) %>%
sample_n(5) %>%
arrange(-Frequency)
Low <- OMFrequency %>%
filter(Frequency == 2) %>%
sample_n(5)
View(High)
View(Mid_byMean)
set.seed(123)
High <- OMFrequency %>%
slice(1:5)
High <- OMFrequency %>%
slice(1:5)
Mid_byMean <- OMFrequency %>%
filter(Frequency %in% c(6,7)) %>%
sample_n(5) %>%
arrange(-Frequency)
View(Mid_byMean)
set.seed(2)
High <- OMFrequency %>%
slice(1:5)
View(Mid_byMean)
set.seed(11)
High <- OMFrequency %>%
slice(1:5)
View(Mid_byMean)
set.seed(111)
Mid_byMean <- OMFrequency %>%
filter(Frequency %in% c(6,7)) %>%
sample_n(5) %>%
arrange(-Frequency)
View(Mid_byMean)
set.seed(5)
Mid_byMean <- OMFrequency %>%
filter(Frequency %in% c(6,7)) %>%
sample_n(5) %>%
arrange(-Frequency)
View(Mid_byMean)
set.seed(1)
Mid_byMean <- OMFrequency %>%
filter(Frequency %in% c(6,7)) %>%
sample_n(5) %>%
arrange(-Frequency)
View(Mid_byMedian)
View(Mid_byMean)
View(Mid_byMean)
Low <- OMFrequency %>%
filter(Frequency == 2) %>%
sample_n(5)
View(Low)
Low <- OMFrequency %>%
filter(Frequency == 1) %>%
sample_n(5)
View(Low)
Low <- OMFrequency %>%
filter(EfficacyName %in% c("Pattern Recognition Memory (PRM)", "Wonderlic Personnel Test - IQ", "Word Stem Completion", "Overlapping Figure Test", "Continuous Visual Memory Test (CVMT)"))
View(Low)
Low <- OMFrequency %>%
filter(EfficacyName %in% c("Pattern Recognition Memory (PRM)", "Stockings of Cambridge (SOC)", "Word Stem Completion", "Overlapping Figure Test", "Continuous Visual Memory Test (CVMT)"))
View(Low)
Mid_byMean <- OMFrequency %>%
filter(Frequency %in% c(floor(mean(Frequency)),ceiling(mean(Frequency))))
View(Mid_byMean)
Mid_byMean <- OMFrequency %>%
filter(Frequency %in% c(floor(mean(Frequency)), ceiling(mean(Frequency)))) %>%
sample_n(5) %>%
arrange(-Frequency)
View(Mid_byMedian)
View(Mid_byMean)
set.seed(2)
Mid_byMean <- OMFrequency %>%
filter(Frequency %in% c(floor(mean(Frequency)), ceiling(mean(Frequency)))) %>%
sample_n(5) %>%
arrange(-Frequency)
View(Mid_byMean)
set.seed(23)
Mid_byMean <- OMFrequency %>%
filter(Frequency %in% c(floor(mean(Frequency)), ceiling(mean(Frequency)))) %>%
sample_n(5) %>%
arrange(-Frequency)
View(Mid_byMedian)
View(Mid_byMean)
set.seed(24)
Mid_byMean <- OMFrequency %>%
filter(Frequency %in% c(floor(mean(Frequency)), ceiling(mean(Frequency)))) %>%
sample_n(5) %>%
arrange(-Frequency)
View(Mid_byMean)
rm(Mid_byMedian)
set.seed(25)
Mid_byMean <- OMFrequency %>%
filter(Frequency %in% c(floor(mean(Frequency)), ceiling(mean(Frequency)))) %>%
sample_n(5) %>%
arrange(-Frequency)
View(Mid_byMean)
set.seed(26)
Mid_byMean <- OMFrequency %>%
filter(Frequency %in% c(floor(mean(Frequency)), ceiling(mean(Frequency)))) %>%
sample_n(5) %>%
arrange(-Frequency)
View(Mid_byMean)
set.seed(2)
Mid_byMean <- OMFrequency %>%
filter(Frequency %in% c(floor(mean(Frequency)), ceiling(mean(Frequency)))) %>%
sample_n(5) %>%
arrange(-Frequency)
View(Mid_byMean)
library(kable)
library(kableExtra)
tabledata <- rbind(High, Mid_byMean, Low)
kable(
tabledata,
"latex",
caption = NULL,
booktabs = T
) %>%
kable_styling() %>%
group_rows("High Frequency Outcomes", 1, 5) %>%
group_rows("Middle Frequency Outcomes", 6, 10) %>%
group_rows("Low Frequency Outcomes", 11, 15)
kable(tabledata)
kable(tabledata)
kable(tabledata) %>%
# kable(
#   tabledata,
#   "latex",
#   caption = NULL,
#   booktabs = T
# ) %>%
kable_styling() %>%
group_rows("High Frequency Outcomes", 1, 5) %>%
group_rows("Middle Frequency Outcomes", 6, 10) %>%
group_rows("Low Frequency Outcomes", 11, 15)
tabledata <- rbind(High, Mid_byMean, Low) %>%
rename("Outcome Name" = EfficacyName)
tabledata
con_central <- dbConnect(odbc(),
Driver = "SQL Server",
Server = "oxtuwg53np.database.windows.net",
Database = "MedAware.Central",
UID = "SohInfoQA",
PWD = "ma123ma321*",
encoding = "latin1")
OMRaw <- dbGetQuery(con_central,
"	SELECT DISTINCT
st.SourceId,
mesname.Name AS EfficacyName,
mescat.Name AS CatName
FROM Literature.Study st  -- Publication Data table
LEFT JOIN Literature.ArmGroup arm ON arm.StudyId = st.Id -- ArmGroup information table
LEFT JOIN Literature.ArmGroupMeasurement mes ON mes.ArmGroupId = arm.Id -- OM/Bio/Other Table
LEFT JOIN Ontology.Measurement mesname ON mesname.UID = mes.MeasurementUID -- Efficacy Names
LEFT JOIN Ontology.Measurement_MeasurementCategory mescatlink ON mescatlink.MeasurementId = mesname.Id
LEFT JOIN Ontology.MeasurementCategory mescat ON mescat.Id = mescatlink.MeasurementCategoryId
LEFT JOIN Project.DatasetStudy dst ON dst.StudySourceId = st.SourceId
LEFT JOIN Project.ProjectDataset pdst ON pdst.Id = dst.ProjectDatasetId
LEFT JOIN Project.Project pro ON pro.Id = pdst.ProjectId
where (mescat.Name = 'Cognitive' AND pro.Name like 'Alzheimer%')
"
)
OMRaw <- dbGetQuery(con_central,
"	SELECT DISTINCT
st.SourceId,
mesname.Name AS EfficacyName
FROM Literature.Study st  -- Publication Data table
LEFT JOIN Literature.ArmGroup arm ON arm.StudyId = st.Id -- ArmGroup information table
LEFT JOIN Literature.ArmGroupMeasurement mes ON mes.ArmGroupId = arm.Id -- OM/Bio/Other Table
LEFT JOIN Ontology.Measurement mesname ON mesname.UID = mes.MeasurementUID -- Efficacy Names
LEFT JOIN Ontology.Measurement_MeasurementCategory mescatlink ON mescatlink.MeasurementId = mesname.Id
LEFT JOIN Ontology.MeasurementCategory mescat ON mescat.Id = mescatlink.MeasurementCategoryId
LEFT JOIN Project.DatasetStudy dst ON dst.StudySourceId = st.SourceId
LEFT JOIN Project.ProjectDataset pdst ON pdst.Id = dst.ProjectDatasetId
LEFT JOIN Project.Project pro ON pro.Id = pdst.ProjectId
where (mescat.Name = 'Cognitive' AND pro.Name like 'Alzheimer%')
"
)
nStudies_withOM <- dbGetQuery(con_central,
"	SELECT DISTINCT
st.SourceId
FROM Literature.Study st  -- Publication Data table
LEFT JOIN Literature.ArmGroup arm ON arm.StudyId = st.Id -- ArmGroup information table
LEFT JOIN Literature.ArmGroupMeasurement mes ON mes.ArmGroupId = arm.Id -- OM/Bio/Other Table
LEFT JOIN Ontology.Measurement mesname ON mesname.UID = mes.MeasurementUID -- Efficacy Names
LEFT JOIN Ontology.Measurement_MeasurementCategory mescatlink ON mescatlink.MeasurementId = mesname.Id
LEFT JOIN Ontology.MeasurementCategory mescat ON mescat.Id = mescatlink.MeasurementCategoryId
LEFT JOIN Project.DatasetStudy dst ON dst.StudySourceId = st.SourceId
LEFT JOIN Project.ProjectDataset pdst ON pdst.Id = dst.ProjectDatasetId
LEFT JOIN Project.Project pro ON pro.Id = pdst.ProjectId
where (pro.Name like 'Alzheimer%' AND mesname.Name is not null)
"
)
View(nStudies_withOM)
ggplot(
data = OMFrequency,
aes(
x = EfficacyName
)
) +
geom_density()
ggplot(
data = OMRaw,
aes(
x = EfficacyName
)
) +
geom_density()
ggplot(
data = OMRaw,
aes(
x = EfficacyName
)
) +
geom_histogram()
ggplot(
data = OMRaw,
aes(
x = EfficacyName
)
) +
geom_histogram(stat="count")
ggplot(
data = OMRaw,
aes(
x = EfficacyName
)
) +
geom_histogram(stat="density")
ggplot(
data = OMFrequency,
aes(
x = Frequency
)
) +
geom_histogram(stat="count")
ggplot(
data = OMFrequency,
aes(
x = Frequency
)
) +
geom_histogram(stat="count") +
stat_density()
ggplot(
data = OMFrequency,
aes(
x = log(Frequency)
)
) +
geom_histogram(stat="count") +
stat_density()
log(1)
ggplot(
data = OMFrequency,
aes(
x = log(Frequency)
)
) +
geom_histogram(stat="density")
ggplot(
data = OMFrequency,
aes(
x = log(Frequency)
)
) +
geom_histogram(stat="density", binwidth = .1)
ggplot(
data = OMFrequency,
aes(
x = log(Frequency)
)
) +
geom_histogram(stat="count", binwidth = .1)
ggplot(
data = OMFrequency,
aes(
x = log(Frequency)
)
) +
geom_density()
ggplot(
data = OMFrequency,
aes(
x = log(Frequency)
)
) +
geom_line(stat="density")
log(800)
ggplot(
data = OMFrequency,
aes(
x = log(Frequency)
)
) +
geom_density(
fill = "blue"
)
ggplot(
data = OMFrequency,
aes(
x = log(Frequency)
)
) +
geom_density(
aes(
fill = Frequency
)
)
ggplot(
data = OMFrequency,
aes(
x = log(Frequency),
fill = Frequency
)
) +
geom_density()
ggplot(
data = OMFrequency,
aes(
x = log(Frequency),
color = Frequency
)
) +
geom_density()
ggplot(
data = OMFrequency,
aes(
x = log(Frequency),
color = Frequency
)
) +
geom_boxplot()
ggplot(
data = OMFrequency,
aes(
x = log(Frequency),
color = Frequency
)
) +
geom_boxplot(stat="count")
ggplot(
data = OMFrequency,
aes(
x = log(Frequency),
color = Frequency
)
) +
geom_density()
ggplot(
data = OMFrequency,
aes(
x = log(Frequency),
color = Frequency
)
) +
# geom_density() +
geom_line() +
geom_segment(aes(xend = log(Frequency), yend = 0, colour = log(Frequency))) +
scale_color_gradient(low = 'green', high = 'red')
ggplot(
data = OMFrequency,
aes(
x = log(Frequency),
color = Frequency
)
) +
# geom_density() +
geom_line(stat = "density") +
geom_segment(aes(xend = log(Frequency), yend = 0, colour = log(Frequency))) +
scale_color_gradient(low = 'green', high = 'red')
ggplot(
data = OMFrequency,
aes(
x = log(Frequency),
color = Frequency
)
) +
# geom_density() +
geom_line(stat = "density") +
# geom_segment(aes(xend = log(Frequency), yend = 0, colour = log(Frequency))) +
scale_color_gradient(low = 'green', high = 'red')
ggplot(
data = OMFrequency,
aes(
x = log(Frequency),
color = Frequency
)
) +
stat_boxplot()
ggplot(
data = OMFrequency,
aes(
y = log(Frequency),
color = Frequency
)
) +
stat_boxplot()
ggplot(
data = OMFrequency,
aes(
y = (Frequency),
color = Frequency
)
) +
stat_boxplot()
ggplot(
data = OMFrequency,
aes(
y = (Frequency),
color = Frequency
)
) +
geom_violin()
ggplot(
data = OMFrequency,
aes(
y = (Frequency),
color = Frequency,
x = 1
)
) +
geom_violin()
install.packages("blogdown")
blogdown::install_hugo()
library(blogdown)
setwd(../GitHub)
setwd("D:/GitHub"
)
getwd()
library(blogdown)
install_hugo()
new_site(dir = 'blogdown_source',
theme = 'Track3/hermit',
format = 'toml')
new_post(title = "hello-word.Rmd")
getwd()
setwd("./blogdown_source")
getwd()
new_post(title = "hello-word.Rmd")
new_post(title = "hello-word", ext = ".Rmd")
serve_site()
servr::daemon_stop("209979560")
serve_site()
build_site()
build_site()
build_site()
build_site()
install_theme("kakawait/hugo-tranquilpeak-theme")
getwd()
new_site(dir = 'blogdown_source',
theme = 'kakawait/hugo-tranquilpeak-theme',
format = 'toml')
getwd()
new_site(dir = '.',
theme = 'kakawait/hugo-tranquilpeak-theme',
format = 'toml')
build_site()
getwd()
new_site(theme = "Track3/hermit")
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
build_site()
serve_site
serve_site()
build_site()
build_site()
serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
getwd()
blogdown::build_site()
